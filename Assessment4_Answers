//Shriya

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() 
{
    vector<int> v ;
    int x,i,j; 
    int n; 
    cin>>n;
    for(i =0 ; i<n ; i++)
    {
        cin>>x; 
        v.push_back(x);
    }
    int q1, q2, q3;
    cin>>q1;
    cin>>q2>>q3;
    v.erase (v.begin()+(q1-1));
    v.erase(v.begin()+q2-1 , v.begin()+q3-1);
    cout << v.size() << endl;
    for(j =0 ; j< v.size() ; j++)
    {
        cout << v.at(j) << " " ;  
    }
return 0;
}

---------------------------------------------------------------------------------------------------------------------------------------------------------

//Manjunath

#include <bits/stdc++.h>
#include<iostream>
using namespace std;
  
// Function to remove duplicate elements
void removeDuplicates(int arr[], int n)
{
  
    int i;
  
    // Initialise a set
    // to store the array values
    set<int> s;
  
    // Insert the array elements
    // into the set
    for (i = 0; i < n; i++) {
  
        // insert into set
        s.insert(arr[i]);
    }
  
    set<int>::iterator it;
   
     for (it = s.begin(); it != s.end(); ++it)
    
        cout << *it << " ";
        cout<<endl;
    cout << '\n';
}
  
// Driver code
int main()
{
    int arr[] = { 1,5,2,3,4,3,4,2,7,8 };
    int a;
   cout<<"enter the number of ID's:";
  cin>>a;
    int n = sizeof(arr) / sizeof(arr[0]);
  
    // Print array
    
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
        cout<<endl;
    // call removeDuplicates()
    removeDuplicates(arr, n);
  
    return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Kedara

#include <iostream>
#include <iterator>
#include <map>
using namespace std;



int main()
{

map<int, int> m;

m.insert(pair<int, int>(1, 40));
m.insert(pair<int, int>(2, 30));
m.insert(pair<int, int>(3, 60));
m.insert(pair<int, int>(4, 20));
m.insert(pair<int, int>(5, 50));
m.insert(pair<int, int>(6, 50));
m.insert(pair<int, int>(7, 10));




map<int, int>::iterator itr;
cout << "\nThe map m is : \n";
cout << "\tKEY\tELEMENT\n";
for (itr = m.begin(); itr !=m.end(); ++itr) {
cout << '\t' << itr->first << '\t' << itr->second
<< '\n';
}
cout << endl;

cout << "m.lower_bound(5) : "
<< "\tKEY = ";
cout << m.lower_bound(5)->first << '\t';
cout << "\tELEMENT = " << m.lower_bound(5)->second
<< endl;
cout << "m.upper_bound(7) : "
<< "\tKEY = ";
cout << m.upper_bound(7)->first << '\t';
cout << "\tELEMENT = " << m.upper_bound(7)->second
<< endl;
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Kavya

#include <iostream>
#include <vector>
#include <string>
#include <cstdlib>
using namespace std;
int main()
{
    vector<int> ss;
    vector<int>::iterator it;
    int choice, item;
    while (1)
    {
        cout<<"\n---------------------"<<endl;
        cout<<"Vector Implementation in Stl"<<endl;
        cout<<"\n---------------------"<<endl;
        cout<<"1.Insert Element into the Vector"<<endl;
        cout<<"2.Delete Last Element of the Vector"<<endl;
        cout<<"3.Size of the Vector"<<endl;
        cout<<"4.Display by Index"<<endl;
        cout<<"5.Dislplay by Iterator"<<endl;
        cout<<"6.Clear the Vector"<<endl;
        cout<<"7.Exit"<<endl;
        cout<<"Enter your Choice: ";
        cin>>choice;
        switch(choice)
        {
        case 1:
            cout<<"Enter value to be inserted: ";
            cin>>item;
            ss.push_back(item);
            break;
        case 2:
            cout<<"Delete Last Element Inserted:"<<endl;
            ss.pop_back();
            break;
        case 3:
            cout<<"Size of Vector: ";
            cout<<ss.size()<<endl;
            break;
        case 4:
            cout<<"Displaying Vector by Index: ";
            for (int i = 0; i < ss.size(); i++)
            {
                cout<<ss[i]<<" ";
            }
            cout<<endl;
            break;
        case 5:
            cout<<"Displaying Vector by Iterator: ";
            for (it = ss.begin(); it != ss.end(); it++)
            {
                cout<<*it<<" ";
            }
            cout<<endl;
            break;
        case 6:
            ss.clear();
            cout<<"Vector Cleared"<<endl;
            break;
        case 7:
            exit(1);
            break;
        default:
            cout<<"Wrong Choice"<<endl;
        }
    }
    return 0;
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------

//Shashipriya

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() 
{
    
    int n,i;
    cin >> n;
    vector<int> numbers(n, 0);
    for(i = 0; i < n; i++) 
    {
        cin >> numbers[i];
    }

    sort(numbers.begin(), numbers.end());

    for(i = 0; i < n; i++) 
    {
        cout << numbers[i] << " ";
    }
   
    return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Nishanth

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() 
{
    
    int n,i;
    cin >> n;
    vector<int> numbers(n, 0);
    for(i = 0; i < n; i++) 
    {
        cin >> numbers[i];
    }

    sort(numbers.begin(), numbers.end());

    for(i = 0; i < n; i++) 
    {
        cout << numbers[i] << " ";
    }
   
    return 0;
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// Naveen

#include <algorithm>
#include <iostream>
#include <vector>
#include <numeric> //For accumulate operation
using namespace std;
 
int main()
{
    // Initializing vector with array values
    int arr[] = {10, 20, 5, 23 ,42 , 15};
    int n = sizeof(arr)/sizeof(arr[0]);
    vector<int> vect(arr, arr+n);
 
    cout << "Vector is: ";
    for (int i=0; i<n; i++)
        cout << vect[i] << " ";
 
    // Sorting the Vector in Ascending order
    sort(vect.begin(), vect.end());
     cout << "\nVector after sorting is: ";
    for (int i=0; i<n; i++)
       cout << vect[i] << " ";
 
    // Reversing the Vector
    reverse(vect.begin(), vect.end());
 
    cout << "\nVector after reversing is: ";
    for (int i=0; i<6; i++)
        cout << vect[i] << " ";
        cout << "\nMaximum element of vector is: ";
    cout << *max_element(vect.begin(), vect.end());
 
    cout << "\nMinimum element of vector is: ";
    cout << *min_element(vect.begin(), vect.end());
 return 0;
}

